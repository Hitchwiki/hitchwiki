---
# Hitchwiki update: update MediaWiki, its database, extensions and assets
- name: Run pending jobs and clear the queue
  command: chdir={{ dir.wiki }} php ./maintenance/runJobs.php

- name: Regenerate LocalSettings.php
  template: src={{ dir.conf }}/mediawiki.php dest={{ dir.wiki }}/LocalSettings.php

- name: Update Hitchwiki dependencies using composer.local.json
  command: chdir={{ dir.wiki }} composer update --no-progress --no-interaction

- name: Update VisualEditor
  shell: cd "{{ dir.wiki }}/extensions/VisualEditor" git pull; git submodule update --init

- name: Run update script for MediaWiki # If this fails an extension is broken
  command: chdir={{ dir.wiki }} php maintenance/update.php --doshared --quick
  register: mw_update
  ignore_errors: yes # TODO check errors
- debug:
    var: mw_update.stdout_lines
  when: mw_update.rc != 0
- debug:
    var: mw_update.stderr_lines
  when: mw_update.rc != 0
# Fails when db was not empty:
#         "Function: Wikimedia\\Rdbms\\Database::sourceFile( /var/www/public/wiki/extensions/HWWaitingTime/sql/db-hw_waiting_time.sql )", 
#        "Error: 1050 Table 'hw_waiting_time' already exists (localhost)",

- name: Run update script for Semantic MediaWiki
  command: chdir={{ dir.wiki }} php extensions/SemanticMediaWiki/maintenance/SMW_refreshData.php -d 50 -v
  register: smw_update
  ignore_errors: yes
- debug:
    var: smw_update.stderr_lines
  when: smw_update.rc != 0 and smw_update.stderr_lines != ''
- debug:
    var: smw_update.stdout_lines
  when: smw_update.rc != 0 and smw_update.stderr_lines == ''

- name: Run post-install scripts for HW extensions
  # These are not run automatically so we'll just manually invoke them.
  # https://github.com/composer/composer/issues/1193
  command: chdir={{ dir.wiki }} composer run-script post-update-cmd -d ./extensions/{{item}}
  with_items: { HWMap, HitchwikiVector, HWRatings, HWLocationInput }

- name: Import forms, templates etc.
  command: chdir={{ dir.root }}/.. "{{ dir.script }}/import_pages.sh"

...
