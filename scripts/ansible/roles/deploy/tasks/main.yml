---
# Run as root
# used variables: domain, user
#- name: Change hostname to '{{ domain }}'
#  become: yes
#  hostname: name={{ domain }}

- name: Add '{{ domain }}' to `/etc/hosts`
  become: yes
  lineinfile:
    path: /etc/hosts
    regexp: '^127.0.0.1'
    line: 127.0.0.1 localhost {{ domain }}

- name: Add user {{ user }}
  become: yes
  user: generate_ssh_key=yes name={{ user }} uid=1050 shell=/bin/bash
  # https://docs.ansible.com/ansible/latest/user_module.html

- name: Add {{ user }} to sudoers
  become: yes
  lineinfile:
    path: /etc/sudoers
    regexp: '^{{user}}'
    line: "{{user}} ALL=NOPASSWD:ALL"
 
- name: Allow keys in `configs/authorized_keys` to connect as {{ user }}
  become: yes
  authorized_key: user={{ user }} state=present key="{{ lookup('file', 'configs/authorized_keys') }}"

- name: Allow {{ user }} to connect without password
  become: yes
  remote_user: "{{ user }}"
  shell: cat /home/{{ user }}/.ssh/id_rsa.pub >> /home/{{ user }}/.ssh/authorized_keys

- name: Install pip
  become: yes
  apt: name={{ item }} state=present
  with_items: { git, python-pip }

- name: Update pip and install ansible
  pip: name={{ item }} state=latest
  with_items: { pip, ansible }

- name: Clone hitchwiki repository
  remote_user: "{{ user }}"
  git:
    dest: "/home/{{ user }}/src"
    repo: https://github.com/traumschule/hitchwiki # TODO change later
    version: ansible

- name: Grant /home/{{ user }}/src to {{ user }}
  become: yes
  file: path=/home/{{ user }}/src owner={{ user }} group={{ user }} recurse=yes

- name: Copy settings.yml # from local to remote
  copy: src=configs/settings.yml dest=/home/{{ user }}/src/configs/settings.yml owner={{user}} group={{user}}

- name: Set remote `hosts`
  remote_user: "{{ user }}"
  shell: echo -e "[hitchwiki]\nlocalhost" > /home/{{ user }}/src/scripts/ansible/hosts

- name: Link /home/{{ user }}/src to /var/www
  become: yes
  file: state=link force=yes src="/home/{{ user }}/src" path=/var/www
  ignore_errors: yes

- name: Preparation finished, now run '~/src/scripts/setup_hitchwiki.sh' remotely.
  set_fact: state_prepare=True

...
