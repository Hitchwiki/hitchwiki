---
# Prepare user
- debug: var=ansible_user

- name: Load settings
  include_vars: "{{ item }}"
  with_first_found:
    - configs/settings.yml
    - configs/settings-example.yml

- name: Add user {{ user }}
  become: yes
  user: generate_ssh_key=yes name={{ user }} uid=1050 shell=/bin/bash
  # https://docs.ansible.com/ansible/latest/user_module.html

- name: Add authorized_keys for {{ user }}
  become: yes
  authorized_key: user={{ user }} state=present key="{{ lookup('file', item) }}"
  with_first_found:
    - configs/authorized_keys
    - ~/.ssh/id_rsa.pub

- name: Add {{ user }} to sudoers
  become: yes
  lineinfile:
    path: /etc/sudoers
    regexp: '^{{user}}'
    line: "{{user}} ALL=NOPASSWD:ALL"

# Install dependencies
- name: Use apt-cacher
  become: yes
  lineinfile:
    path: /etc/apt/apt.conf.d/apt-cacher-ng
    create: yes
    regexp: '^Acquire::http::Proxy'
    line: >
      Acquire::http::Proxy "http://{{ apt_proxy }}:3142/";
      Acquire::https::Proxy "false"; # or enable "PassThroughPattern: .*" in /etc/apt-cacher-ng/acng.conf
      # See https://blog.packagecloud.io/eng/2015/05/05/using-apt-cacher-ng-with-ssl-tls/
  when: apt_proxy is defined

- name: Install git and pip
  become: yes
  apt: name={{ item }} state=present
  with_items: { git, python-pip }

- name: Update pip and install ansible
  become: yes
  pip: name={{ item }} state=latest umask=0022
  with_items: { pip, ansible }

# Prepare repository (non vagrant)
- name: Prepare repository
  when: ansible_user != "ubuntu"
  remote_user: "{{ user }}"
  include_tasks: non-vagrant.yml

...
