---
# Setup mediawiki with Parsoid and fill it with content

- name: Drop Mediawiki database
  # TODO use vault
  mysql_db: name={{ db.database }} state=absent login_user={{ db.username }} login_password={{ db.password }}
  
- name: Create database
  # TODO use vault
  mysql_db: name={{ db.database }} state=present encoding=utf8 collation=utf8_general_ci login_user={{ db.username }} login_password={{ db.password }}
  #IFS=$'\n' languages=($(echo "SHOW DATABASES;" | mysql -u$username -p$password | grep -E '^hitchwiki_..$' | sed 's/^hitchwiki_//g'))


# Mediawiki installation
- name: Install mediawiki
  composer: command=install no_dev=True working_dir={{ dir.root }}

- name: Create wiki directories
  become: yes
  file: state=directory path={{ item }} owner={{ ansible_user_id }} group={{ ansible_user_id }} mode=664
  with_items:
    - "{{ dir.root }}/tmp/sessions"
    - "{{ dir.wiki }}/cache"
    - "{{ dir.wiki }}/images/cache"
    - "{{ dir.wiki }}/dumps"
    - "{{ dir.wiki }}/extensions"

- name: Grant extensions folder to ansible user
  become: yes
  file: state=directory path={{dir.wiki}} recurse=yes owner=1050 group=1050 mode=774

- name: Configure composer
  file: state=link src={{ dir.conf }}/composer.local.json dest={{ dir.wiki }}/composer.local.json

- name: Download basic MediaWiki extensions
  become: yes
  composer: command=update no_dev=True working_dir={{ dir.wiki }}

- name: Setup Mediawiki extensions
  composer: working_dir={{dir.wiki}} command=run-script no_dev=True arguments="post-install-cmd -d ./extensions/{{ item }}"
  with_items: [ HWMap, HitchwikiVector, HWRatings, HWLocationInput ]

#- name: Stop Maps extension from setting up a {{#coordinates}} parser function hook
  # that conflicts with GeoData extensions's {{#coordinates}} parser function hook
  #
  # We are using GeoData's function in templates to index articles with spatial info
  #
  # TODO: any solution that is cleaner than this temporary dirty hack..
  #echo "Stop Maps extension from setting up a {{#coordinates}} parser function hook..."
  # sed -i -e '111i\ \ /*' -e '116i\ \ */' "$WIKIDIR/extensions/Maps/Maps.php" # wrap damaging lines of code as a /* comment */
  # sed -i -e '112i\ \ // This code block has been commented out by Hitchwiki install script.
  # See scripts/server_install.sh for details\n' "$WIKIDIR/extensions/Maps/Maps.php"

- name: Run Mediawiki install script
  shell: >
    cd {{ dir.wiki }}
    php maintenance/install.php --conf "{{ dir.mwconf }}"
    --dbuser {{db.username}}
    --dbpass {{db.password}}
    --dbname {{db.database}}
    --dbtype mysql
    --pass {{ db.phpmyadmin_password }}
    --scriptpath /{{ dir.wiki }}
    --lang en "{{ mediawiki.sitename }}" hitchwiki
  # sets up wiki in one language ("en")
  # creates one admin user "hitchwiki" with password "autobahn"
  # https://www.mediawiki.org/wiki/Manual:Installing_MediaWiki#Run_the_installation_script
  # Usage: php install.php [--conf|--confpath|--dbname|--dbpass|--dbpassfile|--dbpath|--dbport|--dbprefix|--dbschema|--dbserver|--dbtype|--dbuser|--env-checks|--globals|--help|--installdbpass|--installdbuser|--lang|--memory-limit|--pass|--passfile|--profiler|--quiet|--scriptpath|--server|--wiki] [name] <admin>
  register: mw_install

- debug:
    msg: "{{ mw_install }}"

# MW visual editor
- name: Install MW visual editor
  git:
    clone: yes
    repo: https://gerrit.wikimedia.org/r/p/mediawiki/extensions/VisualEditor.git
    version: "{{ mediawiki.branch }}"
    dest: "{{ dir.wiki }}/extensions/VisualEditor"
    depth: 1
    track_submodules: yes
    force: yes
  # Since it requires submodules, we don't install this using composer
  # https://www.mediawiki.org/wiki/Extension:VisualEditor


# Setup Mediawiki
- name: Configure Hitchwiki
  #become: yes
  shell: rm {{ dir.wiki }}/LocalSettings.php; cp {{ dir.script }}/configs/mediawiki_LocalSettings.php {{ dir.wiki }}/LocalSettings.php
  #file: state=link src={{ dir.script }}/configs/mediawiki_LocalSettings.php path={{ dir.wiki }}/LocalSettings.php force=yes
  #copy: src={{ dir.script }}/configs/mediawiki_LocalSettings.php dest={{ dir.wiki }}/LocalSettings.php owner={{ apache.user }} group={{ apache.group }}
  # Config file is stored elsewhere, require it from MW's LocalSettings.php

- name: Enable Semantic Mediawiki extension
  file: state=touch path={{ dir.wiki }}/extensions/SemanticMediaWikiEnabled
  # Mediawiki config file has a check for `SemanticMediaWikiEnabled` file:
  # basically SMW extensions are not included in MediaWiki before this
  # file exists, because it would cause errors when running
  # `maintenance/install.php`.

- name: Install Parsoid
  include_tasks: parsoid.yml
  when: not state.parsoid

- name: Grant wiki folder to webuser group
  become: yes
  file: path={{ dir.wiki }} recurse=yes owner={{ apache.user }} group={{ apache.group }}

- name: Grant wiki files to webuser
  become: yes
  file: path={{ dir.conf }}/{{item}} owner={{ apache.user }} group={{ apache.group }}
  with_items: { mediawiki.php, settings.ini, mediawiki-lang.php, languages.ini, mediawiki-extensions.php }

- name: Add cron job for daily localisation updates
  cron: name=LocalisationUpdate special_time=daily  job="php {{ dir.wiki }}/extensions/LocalisationUpdate/update.php --quiet"
  # See https://github.com/Hitchwiki/hitchwiki/issues/109

- name: Finish mediawiki setup
  lineinfile:
    path: "{{ dir.state }}"
    regexp: '^  mw:'
    line: "  mw: True"
  notify:
  - load

...
