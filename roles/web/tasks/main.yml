---
# Bring up apache2 webserver with PHP7, node and composer
# Examples:
#   https://github.com/ansible/ansible-examples/tree/master/lamp_simple
#   https://github.com/ansible/ansible-examples/blob/master/wordpress-nginx/roles/php-fpm/tasks/main.yml

- name: Install apache2
  apt: name=apache2 state=latest

- name: Create /var/www
  command: creates=/var/www/ mkdir /var/www/

- name: enable apache mod rewrite
  apache2_module: name=rewrite state=present
  notify:
    - restart apache

- name: allow apache override to all
  command: sed -i "s/AllowOverride None/AllowOverride All/g" /etc/apache2/apache2.conf
  notify:
    - restart apache

- name: Configure Apache to serve `./public` folder
  shell: |
    ln -fs /var/www/configs/apache-hitchwiki.conf hitchwiki.conf chdir=/etc/apache2/sites-available removes=hitchwiki.conf
    ln -fs ../sites-available/hitchwiki.conf hitchwiki.conf chdir=/etc/apache2/sites-enabled
    rm 000-default.conf chdir=/etc/apache2/sites-enabled
    rm -fr "{{ ROOTDIR }}/html" #chdir=/etc/apache2/sites-enabled
  notify:
    - restart apache

- name: install PHP7 and extensions
  apt: name={{item}} state=present
  with_items: { php7.0, libapache2-mod-php7.0, php7.0-mysql, php7.0-curl, php7.0-gd, php7.0-intl, php7.0-imap, php7.0-mcrypt, php7.0-pspell, php7.0-recode, php7.0-sqlite3, php7.0-tidy, php7.0-xmlrpc, php7.0-xsl, php7.0-mbstring, php7.0-opcache, php-memcache, php-pear, php-imagick, php-apcu, php-gettext }

- name: Turn on PHP errors
  shell: |
    sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/7.0/apache2/php.ini
    sed -i "s/display_errors = .*/display_errors = On/" /etc/php/7.0/apache2/php.ini
  notify:
    - restart apache

- name: configure PHPMyAdmin
  # TODO maybe use https://docs.ansible.com/ansible/latest/dpkg_selections_module.html
  shell: |
    debconf-set-selections <<< "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2"
    debconf-set-selections <<< "phpmyadmin phpmyadmin/dbconfig-install boolean true"
    debconf-set-selections <<< "phpmyadmin phpmyadmin/mysql/admin-user string {{ HW__db__username }}"
    debconf-set-selections <<< "phpmyadmin phpmyadmin/mysql/admin-pass password {{ HW__db__password }}"
    debconf-set-selections <<< "phpmyadmin phpmyadmin/mysql/app-pass password {{ HW__db__phpmyadmin_password }}"
    debconf-set-selections <<< "phpmyadmin phpmyadmin/app-password-confirm password {{ HW__db__phpmyadmin_password }}"

- name: Install PHPMyAdmin
  apt: package=phpmyadmin state=present

#- name: Add PHPMyAdmin configuration to Apache
#  command: sed -i -r "s:(Alias /).*(/usr/share/phpmyadmin):\1$PHPMYADMIN_DIR \2:" /etc/phpmyadmin/apache.conf

- name: Install composer
  # https://getcomposer.org/download/
  command: |
    chdir {{ ROOTDIR }}
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    # The installer creates file `composer.phar`
    php composer-setup.php --install-dir=/usr/local/bin
    # Verification hash might change over time so we can't rely on it here...
    # php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f23$
    mv /usr/local/bin/composer.phar /usr/local/bin/composer
    rm composer-setup.php
  # creates: /usr/local/bin/composer

- name: Update nodejs
  apt: name=nodejs state=present

- name: install NodeSoure 8.x
  # TODO migrate the bash script here
  # https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions
  command: curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -

- name: Update bower
  npm: name=bower version='1.8' state=present

- name: Setup self signed SSL certificate
  command: chdir={{ ROOTDIR }} |
    if [[ $* == *--ssl* ]]; then
      bash {{ SCRIPTDIR }}/cert_selfsigned.sh
    else
      echo "Skipped installing self signed SSL certificate."
    fi

...
